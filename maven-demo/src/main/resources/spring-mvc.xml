<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
                    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 配置整合MyBatis -->
	<!-- 1:配置数据库相关参数 properties属性：${url} -->
	<context:property-placeholder
		location="classpath:jdbc.properties" />
	<!--设置spring容器的扫描范围，扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 -->
	<context:component-scan
		base-package="com.ym.controller" />
	<!-- <context:component-scan base-package=" com.ym.controller , com.ym.service 
		, com.ym.dao " /> -->

	<!-- 2:数据库连接池 -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- c3p0连接池的私有属性 -->
		<property name="maxPoolSize" value="${maxPoolSize}" />
		<property name="minPoolSize" value="${minPoolSize}" />
		<!-- 关闭连接后不自动commit -->
		<property name="autoCommitOnClose"
			value="${autoCommitOnClose}" />
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="${checkoutTimeout}" />
		<!-- 当获取连接失败重试次数 -->
		<property name="acquireRetryAttempts"
			value="${acquireRetryAttempts}" />
	</bean>

	<!-- spring + MyBatis 精华 -->
	<!-- 约定大于配置 -->
	<!-- 3:配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBatis全局配置文件：mybatis-config.xml -->
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
		<!-- 扫描entity包 使用别名 org.asset.entity.User -> User -->
		<property name="typeAliasesPackage" value="com.ym.entity" />
		<!-- 扫描sql配置文件:mapper需要的xml文件 -->
		<property name="mapperLocations"
			value="classpath:mapper/*.xml" />
	</bean>

	<!-- 4:配置扫描DAO接口包，动态实现DAO接口，并注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 给出需要扫描DAO接口包 -->
		<property name="basePackage" value="com.ym.dao" />
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory" />
	</bean>
	<!--配置springjdbc中的事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
	<!-- 配置AOP通知 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<!-- 配置事务属性 -->
		<tx:attributes>
			<!-- 添加事务管理的方法 -->
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="select*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置AOP，为添加事务管理的操作配置AOP -->
	<aop:config>
		<!-- 引入的Spring定义的事务通知，需要使用aop:advisor -->
		<!-- 下面难 -->
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* com.ym.service.*.*(..))" />
	</aop:config>

	<!--配置视图解析器，将ModelAndView及字符串解析为具体的页面 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:viewClass="org.springframework.web.servlet.view.JstlView"
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />
	<!--文件上传下载专用的视图解析器CommonsMultipartResolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxInMemorySize" value="10240" /> <!-- 最大内存大小 (10240) -->
		<property name="maxUploadSize" value="-1" /> <!-- 最大文件大小，-1为无限止(-1) -->
	</bean>
	<!-- <bean class="org.springframework.web.servlet.HandlerInterceptor"></bean> -->
</beans>